#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'hpsfpga' in
 * file './hpsfpga.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'spi_ss', class 'altera_avalon_pio'
 * The macros are prefixed with 'SPI_SS_'.
 * The prefix is the slave descriptor.
 */
#define SPI_SS_COMPONENT_TYPE altera_avalon_pio
#define SPI_SS_COMPONENT_NAME spi_ss
#define SPI_SS_BASE 0x0
#define SPI_SS_SPAN 32
#define SPI_SS_END 0x1f
#define SPI_SS_BIT_CLEARING_EDGE_REGISTER 0
#define SPI_SS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SPI_SS_CAPTURE 0
#define SPI_SS_DATA_WIDTH 1
#define SPI_SS_DO_TEST_BENCH_WIRING 0
#define SPI_SS_DRIVEN_SIM_VALUE 0
#define SPI_SS_EDGE_TYPE NONE
#define SPI_SS_FREQ 50000000
#define SPI_SS_HAS_IN 0
#define SPI_SS_HAS_OUT 1
#define SPI_SS_HAS_TRI 0
#define SPI_SS_IRQ_TYPE NONE
#define SPI_SS_RESET_VALUE 0

/*
 * Macros for device 'spi_sck', class 'altera_avalon_pio'
 * The macros are prefixed with 'SPI_SCK_'.
 * The prefix is the slave descriptor.
 */
#define SPI_SCK_COMPONENT_TYPE altera_avalon_pio
#define SPI_SCK_COMPONENT_NAME spi_sck
#define SPI_SCK_BASE 0x10
#define SPI_SCK_SPAN 32
#define SPI_SCK_END 0x2f
#define SPI_SCK_BIT_CLEARING_EDGE_REGISTER 0
#define SPI_SCK_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SPI_SCK_CAPTURE 0
#define SPI_SCK_DATA_WIDTH 1
#define SPI_SCK_DO_TEST_BENCH_WIRING 0
#define SPI_SCK_DRIVEN_SIM_VALUE 0
#define SPI_SCK_EDGE_TYPE NONE
#define SPI_SCK_FREQ 50000000
#define SPI_SCK_HAS_IN 0
#define SPI_SCK_HAS_OUT 1
#define SPI_SCK_HAS_TRI 0
#define SPI_SCK_IRQ_TYPE NONE
#define SPI_SCK_RESET_VALUE 0

/*
 * Macros for device 'spi_miso', class 'altera_avalon_pio'
 * The macros are prefixed with 'SPI_MISO_'.
 * The prefix is the slave descriptor.
 */
#define SPI_MISO_COMPONENT_TYPE altera_avalon_pio
#define SPI_MISO_COMPONENT_NAME spi_miso
#define SPI_MISO_BASE 0x20
#define SPI_MISO_SPAN 32
#define SPI_MISO_END 0x3f
#define SPI_MISO_BIT_CLEARING_EDGE_REGISTER 0
#define SPI_MISO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SPI_MISO_CAPTURE 0
#define SPI_MISO_DATA_WIDTH 1
#define SPI_MISO_DO_TEST_BENCH_WIRING 0
#define SPI_MISO_DRIVEN_SIM_VALUE 0
#define SPI_MISO_EDGE_TYPE NONE
#define SPI_MISO_FREQ 50000000
#define SPI_MISO_HAS_IN 1
#define SPI_MISO_HAS_OUT 0
#define SPI_MISO_HAS_TRI 0
#define SPI_MISO_IRQ_TYPE NONE
#define SPI_MISO_RESET_VALUE 0

/*
 * Macros for device 'spi_mosi', class 'altera_avalon_pio'
 * The macros are prefixed with 'SPI_MOSI_'.
 * The prefix is the slave descriptor.
 */
#define SPI_MOSI_COMPONENT_TYPE altera_avalon_pio
#define SPI_MOSI_COMPONENT_NAME spi_mosi
#define SPI_MOSI_BASE 0x30
#define SPI_MOSI_SPAN 32
#define SPI_MOSI_END 0x4f
#define SPI_MOSI_BIT_CLEARING_EDGE_REGISTER 0
#define SPI_MOSI_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SPI_MOSI_CAPTURE 0
#define SPI_MOSI_DATA_WIDTH 1
#define SPI_MOSI_DO_TEST_BENCH_WIRING 0
#define SPI_MOSI_DRIVEN_SIM_VALUE 0
#define SPI_MOSI_EDGE_TYPE NONE
#define SPI_MOSI_FREQ 50000000
#define SPI_MOSI_HAS_IN 0
#define SPI_MOSI_HAS_OUT 1
#define SPI_MOSI_HAS_TRI 0
#define SPI_MOSI_IRQ_TYPE NONE
#define SPI_MOSI_RESET_VALUE 0


#endif /* _ALTERA_HPS_0_H_ */
